var Te=process.env.AZION_DEBUG&&process.env.AZION_DEBUG==="true",c=e=>e??process.env.AZION_TOKEN??"",s=e=>e??!!Te,R=(e,o,t)=>{let i;if(e&&typeof e=="object"){let n=Object.keys(e)[0];if(n&&typeof e[n]=="string")i=e[n];else if("detail"in e&&typeof e.detail=="string")i=e.detail;else if("message"in e&&typeof e.message=="string")i=e.message;else if("error"in e){if(typeof e.error=="string")i=e.error;else if(typeof e.error=="object"&&e.error!==null){let p=Object.keys(e.error)[0];p&&typeof e.error[p]=="string"?i=e.error[p]:"message"in e.error&&typeof e.error.message=="string"&&(i=e.error.message)}}}else typeof e=="string"&&(i=e);return{message:i||t,operation:o}};async function u(e,o,t,i=!0){let n=await fetch(e,o);if(!n.ok){let p=`HTTP error! Status: ${n.status} - ${n.statusText}`;throw t&&console.log(`Error in fetch: ${p}`),new Error(p)}if(i){let p=n.headers.get("content-type");if(!p||!p.includes("application/json")){let d=`Expected JSON response, but got: ${await n.text()}`;throw t&&console.log(`Error in fetch: ${d}`),new Error(d)}return await n.json()}else return await n.text()}var M="https://api.azionapi.net/edge_applications",Q=async(e,o,t,i)=>{try{let{page:n=1,page_size:p=10,sort:a="name",order:r="asc"}=t||{},d=new URLSearchParams({page:String(n),page_size:String(p),sort:a,order:r});return await u(`${M}/${o}/cache_settings?${d.toString()}`,{method:"GET",headers:{Accept:"application/json; version=3",Authorization:`Token ${e}`}},i)}catch(n){throw i&&console.error("Error getting cache settings:",n),n}},k=async(e,o,t,i)=>{try{return await u(`${M}/${o}/cache_settings/${t}`,{method:"GET",headers:{Accept:"application/json; version=3",Authorization:`Token ${e}`}},i)}catch(n){throw i&&console.error("Error getting cache setting by ID:",n),n}},ee=async(e,o,t,i)=>{try{return await u(`${M}/${o}/cache_settings`,{method:"POST",headers:{Accept:"application/json; version=3","Content-Type":"application/json",Authorization:`Token ${e}`},body:JSON.stringify(t)},i)}catch(n){throw i&&console.error("Error creating cache setting:",n),n}},te=async(e,o,t,i,n)=>{try{return await u(`${M}/${o}/cache_settings/${t}`,{method:"PATCH",headers:{Accept:"application/json; version=3","Content-Type":"application/json",Authorization:`Token ${e}`},body:JSON.stringify(i)},n)}catch(p){throw n&&console.error("Error updating cache setting:",p),p}},ie=async(e,o,t,i)=>{try{return await u(`${M}/${o}/cache_settings/${t}`,{method:"DELETE",headers:{Accept:"application/json; version=3",Authorization:`Token ${e}`}},i)}catch(n){throw i&&console.error("Error deleting cache setting:",n),n}};var y=async(e,o,t,i)=>{try{return{data:(await ee(c(e),o,t,s(i?.debug))).results}}catch(n){return{error:{message:n instanceof Error?n.message:"Failed to create cache setting",operation:"create cache setting"}}}},z=async(e,o,t,i)=>{try{return{data:(await k(c(e),o,t,s(i?.debug))).results}}catch(n){return{error:{message:n instanceof Error?n.message:"Failed to get cache setting",operation:"get cache setting"}}}},C=async(e,o,t,i)=>{try{let n=await Q(c(e),o,t,s(i?.debug)),p=n.results.map(a=>({...a}));return{data:{count:n.count,total_pages:n.total_pages,schema_version:n.schema_version,links:n.links,results:p}}}catch(n){return{error:{message:n instanceof Error?n.message:"Failed to get cache settings",operation:"get cache settings"}}}},I=async(e,o,t,i,n)=>{try{return{data:(await te(c(e),o,t,i,s(n?.debug))).results}}catch(p){return{error:{message:p instanceof Error?p.message:"Failed to update cache setting",operation:"update cache setting"}}}},f=async(e,o,t,i)=>{try{return await ie(c(e),o,t,s(i?.debug)),{data:void 0}}catch(n){return{error:{message:n instanceof Error?n.message:"Failed to delete cache setting",operation:"delete cache setting"}}}},$e=({applicationId:e,data:o,options:t})=>y(c(),e,o,t),we=({applicationId:e,cacheSettingId:o,options:t})=>z(c(),e,o,t),Le=({applicationId:e,params:o,options:t})=>C(c(),e,o,t),Ue=({applicationId:e,cacheSettingId:o,data:t,options:i})=>I(c(),e,o,t,i),We=({applicationId:e,cacheSettingId:o,options:t})=>f(c(),e,o,t);var q="https://api.azionapi.net/edge_applications",ne=async(e,o,t,i)=>{try{let{page:n=1,page_size:p=10,sort:a="name",order:r="asc"}=t||{},d=new URLSearchParams({page:String(n),page_size:String(p),sort:a,order:r});return await u(`${q}/${o}/device_groups?${d.toString()}`,{method:"GET",headers:{Accept:"application/json; version=3",Authorization:`Token ${e}`}},i)}catch(n){throw i&&console.error("Error getting device groups:",n),n}},re=async(e,o,t,i)=>{try{return await u(`${q}/${o}/device_groups/${t}`,{method:"GET",headers:{Accept:"application/json; version=3",Authorization:`Token ${e}`}},i)}catch(n){throw i&&console.error("Error getting device group by ID:",n),n}},ae=async(e,o,t,i)=>{try{return await u(`${q}/${o}/device_groups`,{method:"POST",headers:{Accept:"application/json; version=3","Content-Type":"application/json",Authorization:`Token ${e}`},body:JSON.stringify(t)},i)}catch(n){throw i&&console.error("Error creating device group:",n),n}},oe=async(e,o,t,i,n)=>{try{return await u(`${q}/${o}/device_groups/${t}`,{method:"PATCH",headers:{Accept:"application/json; version=3","Content-Type":"application/json",Authorization:`Token ${e}`},body:JSON.stringify(i)},n)}catch(p){throw n&&console.error("Error updating device group:",p),p}},se=async(e,o,t,i)=>{try{return await u(`${q}/${o}/device_groups/${t}`,{method:"DELETE",headers:{Accept:"application/json; version=3",Authorization:`Token ${e}`}},i)}catch(n){throw i&&console.error("Error deleting device group:",n),n}};var P=async(e,o,t,i)=>{try{let{results:n}=await ae(c(e),o,t,s(i?.debug));return{data:n}}catch(n){return{error:{message:n instanceof Error?n.message:"Failed to create device group",operation:"create device group"}}}},O=async(e,o,t,i)=>{try{return await se(c(e),o,t,s(i?.debug)),{data:void 0}}catch(n){return{error:{message:n instanceof Error?n.message:"Failed to delete device group",operation:"delete device group"}}}},v=async(e,o,t,i)=>{try{let{results:n}=await re(c(e),o,t,s(i?.debug));return{data:n}}catch(n){return{error:{message:n instanceof Error?n.message:"Failed to get device group",operation:"get device group"}}}},_=async(e,o,t,i)=>{try{return{data:await ne(c(e),o,t,s(i?.debug))}}catch(n){return{error:{message:n instanceof Error?n.message:"Failed to get device groups",operation:"get device groups"}}}},S=async(e,o,t,i,n)=>{try{let{results:p}=await oe(c(e),o,t,i,s(n?.debug));return{data:p}}catch(p){return{error:{message:p instanceof Error?p.message:"Failed to update device group",operation:"update device group"}}}},Me=({applicationId:e,data:o,options:t})=>P(c(),e,o,t),qe=({applicationId:e,deviceGroupId:o,options:t})=>O(c(),e,o,t),je=({applicationId:e,deviceGroupId:o,options:t})=>v(c(),e,o,t),Be=({applicationId:e,params:o,options:t})=>_(c(),e,o,t),Ne=({applicationId:e,deviceGroupId:o,data:t,options:i})=>S(c(),e,o,t,i);var j="https://api.azionapi.net/edge_applications",pe=async(e,o,t,i)=>{try{let{page:n=1,page_size:p=10,sort:a="asc",order_by:r="name",filter:d=""}=t||{},h=new URLSearchParams({page:String(n),page_size:String(p),sort:a,order_by:r,filter:d});return await u(`${j}/${o}/functions_instances?${h.toString()}`,{method:"GET",headers:{Accept:"application/json; version=3",Authorization:`Token ${e}`}},i)}catch(n){throw i&&console.error("Error listing function instances:",n),n}},ce=async(e,o,t,i)=>{try{return await u(`${j}/${o}/functions_instances/${t}`,{method:"GET",headers:{Accept:"application/json; version=3",Authorization:`Token ${e}`}},i)}catch(n){throw i&&console.error("Error getting function instance by ID:",n),n}},ue=async(e,o,t,i)=>{try{let n=await u(`${j}/${o}/functions_instances`,{method:"POST",headers:{Accept:"application/json; version=3","Content-Type":"application/json",Authorization:`Token ${e}`},body:JSON.stringify(t)},i);return i&&console.log("Response:",n),n}catch(n){throw i&&console.error("Error creating function instance:",n),n}},de=async(e,o,t,i,n)=>{try{return await u(`${j}/${o}/functions_instances/${t}`,{method:"PATCH",headers:{Accept:"application/json; version=3","Content-Type":"application/json",Authorization:`Token ${e}`},body:JSON.stringify(i)},n)}catch(p){throw n&&console.error("Error updating function instance:",p),p}},ge=async(e,o,t,i)=>{try{return await u(`${j}/${o}/functions_instances/${t}`,{method:"DELETE",headers:{Accept:"application/json; version=3",Authorization:`Token ${e}`}},i)}catch(n){throw i&&console.error("Error deleting function instance:",n),n}};var x=async(e,o,t,i)=>{try{return{data:(await ue(c(e),o,t,s(i?.debug))).results}}catch(n){return{error:{message:n instanceof Error?n.message:"Failed to create function instance",operation:"create function instance"}}}},G=async(e,o,t,i)=>{try{return await ge(c(e),o,t,s(i?.debug)),{data:void 0}}catch(n){return{error:{message:n instanceof Error?n.message:"Failed to delete function instance",operation:"delete function instance"}}}},F=async(e,o,t,i)=>{try{let{results:n}=await ce(c(e),o,t,s(i?.debug));return{data:n}}catch(n){return{error:{message:n instanceof Error?n.message:"Failed to get function instance",operation:"get function instance"}}}},D=async(e,o,t,i)=>{try{return{data:await pe(c(e),o,t,s(i?.debug))}}catch(n){return{error:{message:n instanceof Error?n.message:"Failed to get function instances",operation:"get function instances"}}}},E=async(e,o,t,i,n)=>{try{let{results:p}=await de(c(e),o,t,i,s(n?.debug));return{data:p}}catch(p){return{error:{message:p instanceof Error?p.message:"Failed to update function instance",operation:"update function instance"}}}},Ke=({applicationId:e,data:o,options:t})=>x(c(),e,o,t),Je=({applicationId:e,functionInstanceId:o,options:t})=>G(c(),e,o,t),He=({applicationId:e,functionInstanceId:o,options:t})=>F(c(),e,o,t),Ze=({applicationId:e,params:o,options:t})=>D(c(),e,o,t),Ve=({applicationId:e,functionInstanceId:o,data:t,options:i})=>E(c(),e,o,t,i);var B="https://api.azionapi.net/edge_applications",le=async(e,o,t,i)=>{try{let{page:n=1,page_size:p=10,sort:a="name",order:r="asc",filter:d=""}=t||{},h=new URLSearchParams({page:String(n),page_size:String(p),sort:a,order:r,filter:d});return await u(`${B}/${o}/origins?${h.toString()}`,{method:"GET",headers:{Accept:"application/json; version=3",Authorization:`Token ${e}`}},i)}catch(n){throw i&&console.error("Error listing origins:",n),n}},Ae=async(e,o,t,i)=>{try{return await u(`${B}/${o}/origins/${t}`,{method:"GET",headers:{Accept:"application/json; version=3",Authorization:`Token ${e}`}},i)}catch(n){throw i&&console.error("Error getting origin by key:",n),n}},me=async(e,o,t,i)=>{try{return await u(`${B}/${o}/origins`,{method:"POST",headers:{Accept:"application/json; version=3","Content-Type":"application/json",Authorization:`Token ${e}`},body:JSON.stringify(t)},i)}catch(n){throw i&&console.error("Error creating origin:",n),n}},be=async(e,o,t,i,n)=>{try{return await u(`${B}/${o}/origins/${t}`,{method:"PATCH",headers:{Accept:"application/json; version=3","Content-Type":"application/json",Authorization:`Token ${e}`},body:JSON.stringify(i)},n)}catch(p){throw n&&console.error("Error updating origin:",p),p}},he=async(e,o,t,i)=>{try{return await u(`${B}/${o}/origins/${t}`,{method:"DELETE",headers:{Accept:"application/json; version=3",Authorization:`Token ${e}`}},i)}catch(n){throw i&&console.error("Error deleting origin:",n),n}};var T=async(e,o,t,i)=>{try{let{results:n}=await me(e,o,t,s(i?.debug));return{data:n}}catch(n){return{error:{message:n instanceof Error?n.message:"Failed to create origin",operation:"create origin"}}}},$=async(e,o,t,i)=>{try{return await he(e,o,t,s(i?.debug)),{data:void 0}}catch(n){return{error:{message:n instanceof Error?n.message:"Failed to delete origin",operation:"delete origin"}}}},w=async(e,o,t,i)=>{try{let{results:n}=await Ae(e,o,t,s(i?.debug));return{data:n}}catch(n){return{error:{message:n instanceof Error?n.message:"Failed to get origin",operation:"get origin"}}}},L=async(e,o,t,i)=>{try{return{data:await le(e,o,t,s(i?.debug))}}catch(n){return{error:{message:n instanceof Error?n.message:"Failed to get origins",operation:"get origins"}}}},U=async(e,o,t,i,n)=>{try{let{results:p}=await be(e,o,t,i,s(n?.debug));return{data:p}}catch(p){return{error:{message:p instanceof Error?p.message:"Failed to update origin",operation:"update origin"}}}},Ye=({applicationId:e,data:o,options:t})=>T(c(),e,o,t),Xe=({applicationId:e,originKey:o,options:t})=>$(c(),e,o,t),Qe=({applicationId:e,originKey:o,options:t})=>w(c(),e,o,t),ke=({applicationId:e,params:o,options:t})=>L(c(),e,o,t),et=({applicationId:e,originKey:o,data:t,options:i})=>U(c(),e,o,t,i);var N="https://api.azionapi.net/edge_applications",Re=async(e,o,t,i,n)=>{try{let{page:p=1,page_size:a=10,sort:r="name",order:d="asc"}=i||{},h=new URLSearchParams({page:String(p),page_size:String(a),sort:r,order:d});return await u(`${N}/${o}/rules_engine/${t}/rules?${h.toString()}`,{method:"GET",headers:{Accept:"application/json; version=3",Authorization:`Token ${e}`}},n)}catch(p){throw n&&console.error("Error listing rules:",p),p}},ye=async(e,o,t,i,n)=>{try{return await u(`${N}/${o}/rules_engine/${t}/rules/${i}`,{method:"GET",headers:{Accept:"application/json; version=3",Authorization:`Token ${e}`}},n)}catch(p){throw n&&console.error("Error getting rule by ID:",p),p}},ze=async(e,o,t,i,n)=>{try{return await u(`${N}/${o}/rules_engine/${t}/rules`,{method:"POST",headers:{Accept:"application/json; version=3","Content-Type":"application/json",Authorization:`Token ${e}`},body:JSON.stringify(i)},n)}catch(p){throw n&&console.error("Error creating rule:",p),p}},Ce=async(e,o,t,i,n,p)=>{try{return await u(`${N}/${o}/rules_engine/${t}/rules/${i}`,{method:"PATCH",headers:{Accept:"application/json; version=3","Content-Type":"application/json",Authorization:`Token ${e}`},body:JSON.stringify(n)},p)}catch(a){throw p&&console.error("Error updating rule:",a),a}},Ie=async(e,o,t,i,n)=>{try{await u(`${N}/${o}/rules_engine/${t}/rules/${i}`,{method:"DELETE",headers:{Accept:"application/json; version=3",Authorization:`Token ${e}`}},n)}catch(p){throw n&&console.error("Error deleting rule:",p),p}};var tt=({applicationId:e,phase:o,data:t,options:i})=>g(c(),e,o,t,i),it=({applicationId:e,phase:o,ruleId:t,options:i})=>l(c(),e,o,t,i),nt=({applicationId:e,phase:o,params:t,options:i})=>A(c(),e,o,t,i),rt=({applicationId:e,phase:o,ruleId:t,data:i,options:n})=>m(c(),e,o,t,i,n),at=({applicationId:e,phase:o,ruleId:t,options:i})=>b(c(),e,o,t,i),g=async(e,o,t,i,n)=>{try{let{results:p}=await ze(c(e),o,t,i,s(n?.debug));return{data:p}}catch(p){return{error:{message:p instanceof Error?p.message:"Failed to create rule",operation:"create rule"}}}},l=async(e,o,t,i,n)=>{try{let{results:p}=await ye(c(e),o,t,i,s(n?.debug));return{data:p}}catch(p){return{error:{message:p instanceof Error?p.message:"Failed to get rule",operation:"get rule"}}}},A=async(e,o,t,i,n)=>{try{return{data:await Re(c(e),o,t,i,s(n?.debug))}}catch(p){return{error:{message:p instanceof Error?p.message:"Failed to get rules",operation:"get rules"}}}},m=async(e,o,t,i,n,p)=>{try{let{results:a}=await Ce(c(e),o,t,i,n,s(p?.debug));return{data:a}}catch(a){return{error:{message:a instanceof Error?a.message:"Failed to update rule",operation:"update rule"}}}},b=async(e,o,t,i,n)=>{try{return await Ie(c(e),o,t,i,s(n?.debug)),{data:void 0}}catch(p){return{error:{message:p instanceof Error?p.message:"Failed to delete rule",operation:"delete rule"}}}};var W="https://api.azionapi.net/edge_applications",fe=async(e,o,t)=>{try{let{order_by:i="name",sort:n="asc",page:p=1,page_size:a=10}=o||{},r=new URLSearchParams({order_by:i,sort:n,page:String(p),page_size:String(a)});return await u(`${W}?${r.toString()}`,{method:"GET",headers:{Accept:"application/json; version=3",Authorization:`Token ${e}`}},t)}catch(i){throw t&&console.error("Error getting all applications:",i),i}},Pe=async(e,o,t)=>{try{return await u(`${W}/${o}`,{method:"GET",headers:{Accept:"application/json; version=3",Authorization:`Token ${e}`}},t)}catch(i){throw t&&console.error("Error getting application by ID:",i),i}},Oe=async(e,o,t)=>{try{return await u(W,{method:"POST",headers:{Accept:"application/json; version=3","Content-Type":"application/json",Authorization:`Token ${e}`},body:JSON.stringify(o)},t)}catch(i){throw t&&console.error("Error creating application:",i),i}},ve=async(e,o,t,i)=>{try{return await u(`${W}/${o}`,{method:"PUT",headers:{Accept:"application/json; version=3","Content-Type":"application/json",Authorization:`Token ${e}`},body:JSON.stringify(t)},i)}catch(n){throw i&&console.error("Error updating application:",n),n}},_e=async(e,o,t,i)=>{try{return await u(`${W}/${o}`,{method:"PATCH",headers:{Accept:"application/json; version=3","Content-Type":"application/json",Authorization:`Token ${e}`},body:JSON.stringify(t)},i)}catch(n){throw i&&console.error("Error patching application:",n),n}},Se=async(e,o,t)=>{try{return await u(`${W}/${o}`,{method:"DELETE",headers:{Accept:"application/json; version=3",Authorization:`Token ${e}`}},t)}catch(i){throw t&&console.error("Error deleting application:",i),i}};var K=async(e,o,t)=>{let i=await Oe(c(e),o,s(t?.debug));if(!i||!i.results)return{error:R(i,"post application","Failed to post application")};let n=i.results?.id;return{data:{...i.results,cache:{createCacheSetting:a=>y(e,n,a.data,{...t,debug:s(t?.debug)}),getCacheSetting:a=>z(e,n,a.cacheSettingId,{...t,debug:s(t?.debug)}),getCacheSettings:a=>C(e,n,a.params,{...t,debug:s(t?.debug)}),updateCacheSetting:a=>I(e,n,a.cacheSettingId,a.data,{...t,debug:s(t?.debug)}),deleteCacheSetting:a=>f(e,n,a.cacheSettingId,{...t,debug:s(t?.debug)})},origins:{createOrigin:a=>T(e,n,a.data,{...t,debug:s(t?.debug)}),getOrigin:a=>w(e,n,a.originKey,{...t,debug:s(t?.debug)}),getOrigins:a=>L(e,n,a.params,{...t,debug:s(t?.debug)}),updateOrigin:a=>U(e,n,a.originKey,a.data,{...t,debug:s(t?.debug)}),deleteOrigin:a=>$(e,n,a.originKey,{...t,debug:s(t?.debug)})},rules:{request:{createRule:a=>g(e,n,"request",a.data,{...t,debug:s(t?.debug)}),getRule:a=>l(e,n,"request",a.ruleId,{...t,debug:s(t?.debug)}),getRules:a=>A(e,n,"request",a.params,{...t,debug:s(t?.debug)}),updateRule:a=>m(e,n,"request",a.ruleId,a.data,{...t,debug:s(t?.debug)}),deleteRule:a=>b(e,n,"request",a.ruleId,{...t,debug:s(t?.debug)})},response:{createRule:a=>g(e,n,"response",a.data,{...t,debug:s(t?.debug)}),getRule:a=>l(e,n,"response",a.ruleId,{...t,debug:s(t?.debug)}),getRules:a=>A(e,n,"response",a.params,{...t,debug:s(t?.debug)}),updateRule:a=>m(e,n,"response",a.ruleId,a.data,{...t,debug:s(t?.debug)}),deleteRule:a=>b(e,n,"response",a.ruleId,{...t,debug:s(t?.debug)})}},devices:{createDeviceGroup:a=>P(e,n,a.data,{...t,debug:s(t?.debug)}),getDeviceGroup:a=>v(e,n,a.deviceGroupId,{...t,debug:s(t?.debug)}),getDeviceGroups:a=>_(e,n,a.params,{...t,debug:s(t?.debug)}),updateDeviceGroup:a=>S(e,n,a.deviceGroupId,a.data,{...t,debug:s(t?.debug)}),deleteDeviceGroup:a=>O(e,n,a.deviceGroupId,{...t,debug:s(t?.debug)})},functions:{createFunctionInstance:a=>x(e,n,a.data,{...t,debug:s(t?.debug)}),getFunctionInstance:a=>F(e,n,a.functionInstanceId,{...t,debug:s(t?.debug)}),getFunctionInstances:a=>D(e,n,a.params,{...t,debug:s(t?.debug)}),updateFunctionInstance:a=>E(e,n,a.functionInstanceId,a.data,{...t,debug:s(t?.debug)}),deleteFunctionInstance:a=>G(e,n,a.functionInstanceId,{...t,debug:s(t?.debug)})}}}},J=async(e,o,t)=>{let i=await Pe(c(e),o,s(t?.debug));if(!i||!i.results)return{error:R(i,"get application","Failed to get application")};let n=i.results.id;return{data:{...i.results,cache:{createCacheSetting:a=>y(e,n,a.data,{...t,debug:s(t?.debug)}),getCacheSetting:a=>z(e,n,a.cacheSettingId,{...t,debug:s(t?.debug)}),getCacheSettings:a=>C(e,n,a.params,{...t,debug:s(t?.debug)}),updateCacheSetting:a=>I(e,n,a.cacheSettingId,a.data,{...t,debug:s(t?.debug)}),deleteCacheSetting:a=>f(e,n,a.cacheSettingId,{...t,debug:s(t?.debug)})},origins:{createOrigin:a=>T(e,n,a.data,{...t,debug:s(t?.debug)}),getOrigin:a=>w(e,n,a.originKey,{...t,debug:s(t?.debug)}),getOrigins:a=>L(e,n,a.params,{...t,debug:s(t?.debug)}),updateOrigin:a=>U(e,n,a.originKey,a.data,{...t,debug:s(t?.debug)}),deleteOrigin:a=>$(e,n,a.originKey,{...t,debug:s(t?.debug)})},rules:{request:{createRule:a=>g(e,n,"request",a.data,{...t,debug:s(t?.debug)}),getRule:a=>l(e,n,"request",a.ruleId,{...t,debug:s(t?.debug)}),getRules:a=>A(e,n,"request",a.params,{...t,debug:s(t?.debug)}),updateRule:a=>m(e,n,"request",a.ruleId,a.data,{...t,debug:s(t?.debug)}),deleteRule:a=>b(e,n,"request",a.ruleId,{...t,debug:s(t?.debug)})},response:{createRule:a=>g(e,n,"response",a.data,{...t,debug:s(t?.debug)}),getRule:a=>l(e,n,"response",a.ruleId,{...t,debug:s(t?.debug)}),getRules:a=>A(e,n,"response",a.params,{...t,debug:s(t?.debug)}),updateRule:a=>m(e,n,"response",a.ruleId,a.data,{...t,debug:s(t?.debug)}),deleteRule:a=>b(e,n,"response",a.ruleId,{...t,debug:s(t?.debug)})}},devices:{createDeviceGroup:a=>P(e,n,a.data,{...t,debug:s(t?.debug)}),getDeviceGroup:a=>v(e,n,a.deviceGroupId,{...t,debug:s(t?.debug)}),getDeviceGroups:a=>_(e,n,a.params,{...t,debug:s(t?.debug)}),updateDeviceGroup:a=>S(e,n,a.deviceGroupId,a.data,{...t,debug:s(t?.debug)}),deleteDeviceGroup:a=>O(e,n,a.deviceGroupId,{...t,debug:s(t?.debug)})},functions:{createFunctionInstance:a=>x(e,n,a.data,{...t,debug:s(t?.debug)}),getFunctionInstance:a=>F(e,n,a.functionInstanceId,{...t,debug:s(t?.debug)}),getFunctionInstances:a=>D(e,n,a.params,{...t,debug:s(t?.debug)}),updateFunctionInstance:a=>E(e,n,a.functionInstanceId,a.data,{...t,debug:s(t?.debug)}),deleteFunctionInstance:a=>G(e,n,a.functionInstanceId,{...t,debug:s(t?.debug)})}}}},H=async(e,o,t)=>{let i=await fe(c(e),o,s(t?.debug));if(!i||!i.results)return{error:R(i,"get applications","Failed to get applications")};let n=i.results.map(p=>{let a=p.id;return{...p,cache:{createCacheSetting:r=>y(e,a,r.data,{...t,debug:s(t?.debug)}),getCacheSetting:r=>z(e,a,r.cacheSettingId,{...t,debug:s(t?.debug)}),getCacheSettings:r=>C(e,a,r.params,{...t,debug:s(t?.debug)}),updateCacheSetting:r=>I(e,a,r.cacheSettingId,r.data,{...t,debug:s(t?.debug)}),deleteCacheSetting:r=>f(e,a,r.cacheSettingId,{...t,debug:s(t?.debug)})},origins:{createOrigin:r=>T(e,a,r.data,{...t,debug:s(t?.debug)}),getOrigin:r=>w(e,a,r.originKey,{...t,debug:s(t?.debug)}),getOrigins:r=>L(e,a,r.params,{...t,debug:s(t?.debug)}),updateOrigin:r=>U(e,a,r.originKey,r.data,{...t,debug:s(t?.debug)}),deleteOrigin:r=>$(e,a,r.originKey,{...t,debug:s(t?.debug)})},rules:{request:{createRule:r=>g(e,a,"request",r.data,{...t,debug:s(t?.debug)}),getRule:r=>l(e,a,"request",r.ruleId,{...t,debug:s(t?.debug)}),getRules:r=>A(e,a,"request",r.params,{...t,debug:s(t?.debug)}),updateRule:r=>m(e,a,"request",r.ruleId,r.data,{...t,debug:s(t?.debug)}),deleteRule:r=>b(e,a,"request",r.ruleId,{...t,debug:s(t?.debug)})},response:{createRule:r=>g(e,a,"response",r.data,{...t,debug:s(t?.debug)}),getRule:r=>l(e,a,"response",r.ruleId,{...t,debug:s(t?.debug)}),getRules:r=>A(e,a,"response",r.params,{...t,debug:s(t?.debug)}),updateRule:r=>m(e,a,"response",r.ruleId,r.data,{...t,debug:s(t?.debug)}),deleteRule:r=>b(e,a,"response",r.ruleId,{...t,debug:s(t?.debug)})}},devices:{createDeviceGroup:r=>P(e,a,r.data,{...t,debug:s(t?.debug)}),getDeviceGroup:r=>v(e,a,r.deviceGroupId,{...t,debug:s(t?.debug)}),getDeviceGroups:r=>_(e,a,r.params,{...t,debug:s(t?.debug)}),updateDeviceGroup:r=>S(e,a,r.deviceGroupId,r.data,{...t,debug:s(t?.debug)}),deleteDeviceGroup:r=>O(e,a,r.deviceGroupId,{...t,debug:s(t?.debug)})},functions:{createFunctionInstance:r=>x(e,a,r.data,{...t,debug:s(t?.debug)}),getFunctionInstance:r=>F(e,a,r.functionInstanceId,{...t,debug:s(t?.debug)}),getFunctionInstances:r=>D(e,a,r.params,{...t,debug:s(t?.debug)}),updateFunctionInstance:r=>E(e,a,r.functionInstanceId,r.data,{...t,debug:s(t?.debug)}),deleteFunctionInstance:r=>G(e,a,r.functionInstanceId,{...t,debug:s(t?.debug)})}}});return{data:{...i,results:n}}},Z=async(e,o,t,i)=>{let n=await ve(c(e),o,t,s(i?.debug));if(!n||!n.results)return{error:R(n,"put application","Failed to put application")};let p=n.results.id;return{data:{...n.results,cache:{createCacheSetting:r=>y(e,p,r.data,{...i,debug:s(i?.debug)}),getCacheSetting:r=>z(e,p,r.cacheSettingId,{...i,debug:s(i?.debug)}),getCacheSettings:r=>C(e,p,r.params,{...i,debug:s(i?.debug)}),updateCacheSetting:r=>I(e,p,r.cacheSettingId,r.data,{...i,debug:s(i?.debug)}),deleteCacheSetting:r=>f(e,p,r.cacheSettingId,{...i,debug:s(i?.debug)})},origins:{createOrigin:r=>T(e,p,r.data,{...i,debug:s(i?.debug)}),getOrigin:r=>w(e,p,r.originKey,{...i,debug:s(i?.debug)}),getOrigins:r=>L(e,p,r.params,{...i,debug:s(i?.debug)}),updateOrigin:r=>U(e,p,r.originKey,r.data,{...i,debug:s(i?.debug)}),deleteOrigin:r=>$(e,p,r.originKey,{...i,debug:s(i?.debug)})},rules:{request:{createRule:r=>g(e,p,"request",r.data,{...i,debug:s(i?.debug)}),getRule:r=>l(e,p,"request",r.ruleId,{...i,debug:s(i?.debug)}),getRules:r=>A(e,p,"request",r.params,{...i,debug:s(i?.debug)}),updateRule:r=>m(e,p,"request",r.ruleId,r.data,{...i,debug:s(i?.debug)}),deleteRule:r=>b(e,p,"request",r.ruleId,{...i,debug:s(i?.debug)})},response:{createRule:r=>g(e,p,"response",r.data,{...i,debug:s(i?.debug)}),getRule:r=>l(e,p,"response",r.ruleId,{...i,debug:s(i?.debug)}),getRules:r=>A(e,p,"response",r.params,{...i,debug:s(i?.debug)}),updateRule:r=>m(e,p,"response",r.ruleId,r.data,{...i,debug:s(i?.debug)}),deleteRule:r=>b(e,p,"response",r.ruleId,{...i,debug:s(i?.debug)})}},devices:{createDeviceGroup:r=>P(e,p,r.data,{...i,debug:s(i?.debug)}),getDeviceGroup:r=>v(e,p,r.deviceGroupId,{...i,debug:s(i?.debug)}),getDeviceGroups:r=>_(e,p,r.params,{...i,debug:s(i?.debug)}),updateDeviceGroup:r=>S(e,p,r.deviceGroupId,r.data,{...i,debug:s(i?.debug)}),deleteDeviceGroup:r=>O(e,p,r.deviceGroupId,{...i,debug:s(i?.debug)})},functions:{createFunctionInstance:r=>x(e,p,r.data,{...i,debug:s(i?.debug)}),getFunctionInstance:r=>F(e,p,r.functionInstanceId,{...i,debug:s(i?.debug)}),getFunctionInstances:r=>D(e,p,r.params,{...i,debug:s(i?.debug)}),updateFunctionInstance:r=>E(e,p,r.functionInstanceId,r.data,{...i,debug:s(i?.debug)}),deleteFunctionInstance:r=>G(e,p,r.functionInstanceId,{...i,debug:s(i?.debug)})}}}},V=async(e,o,t,i)=>{let n=await _e(c(e),o,t,s(i?.debug));if(!n||!n.results)return{error:R(n,"patch application","Failed to patch application")};let p=n.results.id;return{data:{...n.results,cache:{createCacheSetting:r=>y(e,p,r.data,{...i,debug:s(i?.debug)}),getCacheSetting:r=>z(e,p,r.cacheSettingId,{...i,debug:s(i?.debug)}),getCacheSettings:r=>C(e,p,r.params,{...i,debug:s(i?.debug)}),updateCacheSetting:r=>I(e,p,r.cacheSettingId,r.data,{...i,debug:s(i?.debug)}),deleteCacheSetting:r=>f(e,p,r.cacheSettingId,{...i,debug:s(i?.debug)})},origins:{createOrigin:r=>T(e,p,r.data,{...i,debug:s(i?.debug)}),getOrigin:r=>w(e,p,r.originKey,{...i,debug:s(i?.debug)}),getOrigins:r=>L(e,p,r.params,{...i,debug:s(i?.debug)}),updateOrigin:r=>U(e,p,r.originKey,r.data,{...i,debug:s(i?.debug)}),deleteOrigin:r=>$(e,p,r.originKey,{...i,debug:s(i?.debug)})},rules:{request:{createRule:r=>g(e,p,"request",r.data,{...i,debug:s(i?.debug)}),getRule:r=>l(e,p,"request",r.ruleId,{...i,debug:s(i?.debug)}),getRules:r=>A(e,p,"request",r.params,{...i,debug:s(i?.debug)}),updateRule:r=>m(e,p,"request",r.ruleId,r.data,{...i,debug:s(i?.debug)}),deleteRule:r=>b(e,p,"request",r.ruleId,{...i,debug:s(i?.debug)})},response:{createRule:r=>g(e,p,"response",r.data,{...i,debug:s(i?.debug)}),getRule:r=>l(e,p,"response",r.ruleId,{...i,debug:s(i?.debug)}),getRules:r=>A(e,p,"response",r.params,{...i,debug:s(i?.debug)}),updateRule:r=>m(e,p,"response",r.ruleId,r.data,{...i,debug:s(i?.debug)}),deleteRule:r=>b(e,p,"response",r.ruleId,{...i,debug:s(i?.debug)})}},devices:{createDeviceGroup:r=>P(e,p,r.data,{...i,debug:s(i?.debug)}),getDeviceGroup:r=>v(e,p,r.deviceGroupId,{...i,debug:s(i?.debug)}),getDeviceGroups:r=>_(e,p,r.params,{...i,debug:s(i?.debug)}),updateDeviceGroup:r=>S(e,p,r.deviceGroupId,r.data,{...i,debug:s(i?.debug)}),deleteDeviceGroup:r=>O(e,p,r.deviceGroupId,{...i,debug:s(i?.debug)})},functions:{createFunctionInstance:r=>x(e,p,r.data,{...i,debug:s(i?.debug)}),getFunctionInstance:r=>F(e,p,r.functionInstanceId,{...i,debug:s(i?.debug)}),getFunctionInstances:r=>D(e,p,r.params,{...i,debug:s(i?.debug)}),updateFunctionInstance:r=>E(e,p,r.functionInstanceId,r.data,{...i,debug:s(i?.debug)}),deleteFunctionInstance:r=>G(e,p,r.functionInstanceId,{...i,debug:s(i?.debug)})}}}},Y=async(e,o,t)=>{try{return await Se(c(e),o,s(t?.debug)),{data:void 0}}catch(i){return{error:R(i,"delete application","Failed to delete application")}}},ot=({data:e,options:o})=>K(c(),e,o),st=({applicationId:e,options:o})=>J(c(),e,o),pt=e=>H(c(),e?.params,e?.options),ct=({applicationId:e,data:o,options:t})=>Z(c(),e,o,t),ut=({applicationId:e,data:o,options:t})=>V(c(),e,o,t),dt=({applicationId:e,options:o})=>Y(c(),e,o);var xe=(i=>(i.HTTP="http",i.HTTPS="https",i.HTTP_HTTPS="http,https",i))(xe||{}),Ge=(i=>(i[i.PORT_80=80]="PORT_80",i[i.PORT_8008=8008]="PORT_8008",i[i.PORT_8080=8080]="PORT_8080",i))(Ge||{}),Fe=(a=>(a[a.PORT_443=443]="PORT_443",a[a.PORT_8443=8443]="PORT_8443",a[a.PORT_9440=9440]="PORT_9440",a[a.PORT_9441=9441]="PORT_9441",a[a.PORT_9442=9442]="PORT_9442",a[a.PORT_9443=9443]="PORT_9443",a))(Fe||{}),De=(n=>(n.TLS_1_0="tls_1_0",n.TLS_1_1="tls_1_1",n.TLS_1_2="tls_1_2",n.TLS_1_3="tls_1_3",n))(De||{}),Ee=(p=>(p.ALL="all",p.TLSv1_2_2018="TLSv1.2_2018",p.TLSv1_2_2019="TLSv1.2_2019",p.TLSv1_2_2021="TLSv1.2_2021",p.TLSv1_3_2022="TLSv1.3_2022",p))(Ee||{});var gt=e=>{let o=c(e?.token),t=s(e?.options?.debug);return{createApplication:async({data:n})=>K(o,n,{...e,debug:t}),deleteApplication:async({applicationId:n,options:p})=>Y(o,n,{...e?.options,...p,debug:s(e?.options?.debug??p?.debug)}),getApplication:async({applicationId:n,options:p})=>J(o,n,{...e?.options,...p,debug:s(e?.options?.debug??p?.debug)}),getApplications:async({params:n,options:p})=>H(o,n,{...e?.options,...p,debug:s(p?.debug)}),putApplication:async({applicationId:n,data:p,options:a})=>Z(o,n,p,{...e?.options,...a,debug:s(a?.debug)}),patchApplication:async({applicationId:n,data:p,options:a})=>V(o,n,p,{...e?.options,...a,debug:s(a?.debug)})}};var Ci=gt;export{xe as DeliveryProtocol,Ge as HttpPort,Fe as HttpsPort,Ee as SupportedCiphers,De as TlsVersion,ot as createApplication,gt as createAzionApplicationClient,$e as createCacheSetting,Me as createDeviceGroup,Ke as createFunctionInstance,Ye as createOrigin,tt as createRule,Ci as default,dt as deleteApplication,We as deleteCacheSetting,qe as deleteDeviceGroup,Je as deleteFunctionInstance,Xe as deleteOrigin,at as deleteRule,st as getApplication,pt as getApplications,we as getCacheSetting,Le as getCacheSettings,je as getDeviceGroup,Be as getDeviceGroups,He as getFunctionInstance,Ze as getFunctionInstances,Qe as getOrigin,ke as getOrigins,it as getRule,nt as getRules,ut as patchApplication,ct as putApplication,Ue as updateCacheSetting,Ne as updateDeviceGroup,Ve as updateFunctionInstance,et as updateOrigin,rt as updateRule};
